/*
 * m4a2s is aprogram to to dump sound files from m4a/mp2k GBA games to pseudo-assembly source files
 * Copyright (C) 2015 ipatix
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA
 */

using System;
using System.IO;
using System.Text;

namespace m4a2s
{
    class Wave
    {
        public static void disassemble(Entity wave, string destFile)
        {
            StringBuilder oasm = new StringBuilder();

            Rom.Reader.BaseStream.Position = wave.Offset;

            oasm.AppendLine("@ File generated by m4a2s Wave-Module");
            oasm.AppendLine("\t.section .rodata");
            oasm.AppendLine("\t.global\t" + wave.Guid);
            oasm.AppendLine("\t.align\t2");
            oasm.AppendLine();
            oasm.AppendLine(wave.Guid + ":");
            oasm.AppendLine();

            ushort type = Rom.Reader.ReadUInt16();


            oasm.AppendLine("\t.hword\t0x" + type.ToString("X4") + ", 0x" +
                            Rom.Reader.ReadUInt16().ToString("X4"));
            int frequency = Rom.Reader.ReadInt32();
            oasm.AppendLine("\t.word\t0x" + frequency.ToString("X") + " @ Mid-C pitch ~" + (frequency/1024.0) +
                            " Hz");
            
            if (type != 0x0)
            {
                Console.WriteLine("Warning! Skipping compressed sample!");
                oasm.AppendLine("\t.word\t0 @ Loop Start");
                oasm.AppendLine("\t.word\t0 @ Loop End");
                File.WriteAllText(destFile, oasm.ToString());
                return;
            }

            int loopStart = Rom.Reader.ReadInt32();
            int loopEnd = Rom.Reader.ReadInt32();

            oasm.AppendLine("\t.word\t" + loopStart + " @ Loop Start");
            oasm.AppendLine("\t.word\t" + loopEnd + " @ Loop End");

            int sampleCount = loopEnd;

            int amountLines = (int) ((loopEnd + 7) & 0xFFFFFFF8);
            amountLines /= 8;

            byte[] sampleBuffer = new byte[8];

            for (int i = 0; i < amountLines; i++)
            {
                int samplesThisLine = sampleCount;
                if (samplesThisLine > 8) samplesThisLine = 8;
                // fetch data
                Rom.Reader.Read(sampleBuffer, 0, samplesThisLine);
                int avgLevel = 0;
                for (int j = 0; j < samplesThisLine; j++)
                {
                    if (j%8 == 0)
                        oasm.Append(Environment.NewLine + "\t.byte\t");
                    else
                        oasm.Append(", ");
                    oasm.Append("0x" + sampleBuffer[j].ToString("X2"));
                    avgLevel += ((sbyte) sampleBuffer[j]) + 128;
                }
                avgLevel /= (samplesThisLine*8);

                if (samplesThisLine == 8)
                {
                    oasm.Append("\t\t@ #");
                    for (int j = 0; j < 32; j++)
                    {
                        if (avgLevel == j) oasm.Append("X");
                        else oasm.Append("-");
                    }
                    oasm.Append("#");
                }

                sampleCount -= samplesThisLine;
            }

            oasm.AppendLine();
            oasm.AppendLine();
            oasm.AppendLine("\t.end");

            File.WriteAllText(destFile, oasm.ToString());
        }
    }

    class GbWave
    {
        public static void disassemble(Entity gbwave, string destFile)
        {
            StringBuilder oasm = new StringBuilder();

            Rom.Reader.BaseStream.Position = gbwave.Offset;

            oasm.AppendLine("@ File generated by m4a2s GB-Wave-Module");
            oasm.AppendLine("\t.section .rodata");
            oasm.AppendLine("\t.global\t" + gbwave.Guid);
            oasm.AppendLine("\t.align\t2");
            oasm.AppendLine();
            oasm.AppendLine(gbwave.Guid + ":");
            oasm.AppendLine();

            for (int i = 0; i < 2; i++)
            {
                oasm.Append("\t.byte\t0x" + Rom.Reader.ReadByte().ToString("X2"));
                for (int j = 0; j < 7; j++)
                    oasm.Append(", 0x" + Rom.Reader.ReadByte().ToString("X2"));
                oasm.AppendLine();
            }
            oasm.AppendLine();
            oasm.AppendLine("\t.end");

            File.WriteAllText(destFile, oasm.ToString());
        }
    }
}
